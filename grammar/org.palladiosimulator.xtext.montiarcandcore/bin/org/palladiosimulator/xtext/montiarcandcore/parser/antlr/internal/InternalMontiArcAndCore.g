/*
 * generated by Xtext 2.34.0
 */
grammar InternalMontiArcAndCore;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package org.palladiosimulator.xtext.montiarcandcore.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.palladiosimulator.xtext.montiarcandcore.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.palladiosimulator.xtext.montiarcandcore.services.MontiArcAndCoreGrammarAccess;

}

@parser::members {

 	private MontiArcAndCoreGrammarAccess grammarAccess;

    public InternalMontiArcAndCoreParser(TokenStream input, MontiArcAndCoreGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "MontiArcAndCore";
   	}

   	@Override
   	protected MontiArcAndCoreGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleMontiArcAndCore
entryRuleMontiArcAndCore returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMontiArcAndCoreRule()); }
	iv_ruleMontiArcAndCore=ruleMontiArcAndCore
	{ $current=$iv_ruleMontiArcAndCore.current; }
	EOF;

// Rule MontiArcAndCore
ruleMontiArcAndCore returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getMontiArcAndCoreAccess().getClassdiagramClassDiagramCompilationUnitParserRuleCall_0_0());
				}
				lv_classdiagram_0_0=ruleClassDiagramCompilationUnit
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMontiArcAndCoreRule());
					}
					set(
						$current,
						"classdiagram",
						lv_classdiagram_0_0,
						"org.palladiosimulator.xtext.montiarcandcore.MontiArcAndCore.ClassDiagramCompilationUnit");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getMontiArcAndCoreAccess().getMontiarcdslMACompilationUnitParserRuleCall_1_0());
				}
				lv_montiarcdsl_1_0=ruleMACompilationUnit
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMontiArcAndCoreRule());
					}
					set(
						$current,
						"montiarcdsl",
						lv_montiarcdsl_1_0,
						"org.palladiosimulator.xtext.montiarcandcore.MontiArcAndCore.MACompilationUnit");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleImportStatements
entryRuleImportStatements returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getImportStatementsRule()); }
	iv_ruleImportStatements=ruleImportStatements
	{ $current=$iv_ruleImportStatements.current; }
	EOF;

// Rule ImportStatements
ruleImportStatements returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='import'
		{
			newLeafNode(otherlv_0, grammarAccess.getImportStatementsAccess().getImportKeyword_0());
		}
		(
			(
				lv_importUri_1_0=RULE_MCQUALIFIEDNAME
				{
					newLeafNode(lv_importUri_1_0, grammarAccess.getImportStatementsAccess().getImportUriMCQUALIFIEDNAMETerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getImportStatementsRule());
					}
					setWithLastConsumed(
						$current,
						"importUri",
						lv_importUri_1_0,
						"org.palladiosimulator.xtext.montiarcandcore.MontiArcAndCore.MCQUALIFIEDNAME");
				}
			)
		)
		(
			(
				lv_star_2_0=RULE_DOTSTAR
				{
					newLeafNode(lv_star_2_0, grammarAccess.getImportStatementsAccess().getStarDOTSTARTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getImportStatementsRule());
					}
					setWithLastConsumed(
						$current,
						"star",
						lv_star_2_0 != null,
						"org.palladiosimulator.xtext.montiarcandcore.MontiArcAndCore.DOTSTAR");
				}
			)
		)?
		otherlv_3=';'
		{
			newLeafNode(otherlv_3, grammarAccess.getImportStatementsAccess().getSemicolonKeyword_3());
		}
	)
;

// Entry rule entryRulePackage
entryRulePackage returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPackageRule()); }
	iv_rulePackage=rulePackage
	{ $current=$iv_rulePackage.current; }
	EOF;

// Rule Package
rulePackage returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='package'
		{
			newLeafNode(otherlv_0, grammarAccess.getPackageAccess().getPackageKeyword_0());
		}
		(
			(
				(
					lv_name_1_1=RULE_MCQUALIFIEDNAME
					{
						newLeafNode(lv_name_1_1, grammarAccess.getPackageAccess().getNameMCQUALIFIEDNAMETerminalRuleCall_1_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getPackageRule());
						}
						setWithLastConsumed(
							$current,
							"name",
							lv_name_1_1,
							"org.palladiosimulator.xtext.montiarcandcore.MontiArcAndCore.MCQUALIFIEDNAME");
					}
					    |
					lv_name_1_2=RULE_ID
					{
						newLeafNode(lv_name_1_2, grammarAccess.getPackageAccess().getNameIDTerminalRuleCall_1_0_1());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getPackageRule());
						}
						setWithLastConsumed(
							$current,
							"name",
							lv_name_1_2,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
		)
		otherlv_2=';'
		{
			newLeafNode(otherlv_2, grammarAccess.getPackageAccess().getSemicolonKeyword_2());
		}
	)
;

// Entry rule entryRuleType
entryRuleType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTypeRule()); }
	iv_ruleType=ruleType
	{ $current=$iv_ruleType.current; }
	EOF;

// Rule Type
ruleType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getTypeAccess().getMCPrimitiveTypeParserRuleCall_0());
		}
		this_MCPrimitiveType_0=ruleMCPrimitiveType
		{
			$current = $this_MCPrimitiveType_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getTypeAccess().getMCArrayTypeParserRuleCall_1());
		}
		this_MCArrayType_1=ruleMCArrayType
		{
			$current = $this_MCArrayType_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getTypeAccess().getMCObjectTypeParserRuleCall_2());
		}
		this_MCObjectType_2=ruleMCObjectType
		{
			$current = $this_MCObjectType_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getTypeAccess().getMCCollectionTypeParserRuleCall_3());
		}
		this_MCCollectionType_3=ruleMCCollectionType
		{
			$current = $this_MCCollectionType_3.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleMCPrimitiveType
entryRuleMCPrimitiveType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMCPrimitiveTypeRule()); }
	iv_ruleMCPrimitiveType=ruleMCPrimitiveType
	{ $current=$iv_ruleMCPrimitiveType.current; }
	EOF;

// Rule MCPrimitiveType
ruleMCPrimitiveType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_type_0_1='boolean'
				{
					newLeafNode(lv_type_0_1, grammarAccess.getMCPrimitiveTypeAccess().getTypeBooleanKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMCPrimitiveTypeRule());
					}
					setWithLastConsumed($current, "type", lv_type_0_1, null);
				}
				    |
				lv_type_0_2='byte'
				{
					newLeafNode(lv_type_0_2, grammarAccess.getMCPrimitiveTypeAccess().getTypeByteKeyword_0_1());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMCPrimitiveTypeRule());
					}
					setWithLastConsumed($current, "type", lv_type_0_2, null);
				}
				    |
				lv_type_0_3='short'
				{
					newLeafNode(lv_type_0_3, grammarAccess.getMCPrimitiveTypeAccess().getTypeShortKeyword_0_2());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMCPrimitiveTypeRule());
					}
					setWithLastConsumed($current, "type", lv_type_0_3, null);
				}
				    |
				lv_type_0_4='int'
				{
					newLeafNode(lv_type_0_4, grammarAccess.getMCPrimitiveTypeAccess().getTypeIntKeyword_0_3());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMCPrimitiveTypeRule());
					}
					setWithLastConsumed($current, "type", lv_type_0_4, null);
				}
				    |
				lv_type_0_5='long'
				{
					newLeafNode(lv_type_0_5, grammarAccess.getMCPrimitiveTypeAccess().getTypeLongKeyword_0_4());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMCPrimitiveTypeRule());
					}
					setWithLastConsumed($current, "type", lv_type_0_5, null);
				}
				    |
				lv_type_0_6='char'
				{
					newLeafNode(lv_type_0_6, grammarAccess.getMCPrimitiveTypeAccess().getTypeCharKeyword_0_5());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMCPrimitiveTypeRule());
					}
					setWithLastConsumed($current, "type", lv_type_0_6, null);
				}
				    |
				lv_type_0_7='float'
				{
					newLeafNode(lv_type_0_7, grammarAccess.getMCPrimitiveTypeAccess().getTypeFloatKeyword_0_6());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMCPrimitiveTypeRule());
					}
					setWithLastConsumed($current, "type", lv_type_0_7, null);
				}
				    |
				lv_type_0_8='double'
				{
					newLeafNode(lv_type_0_8, grammarAccess.getMCPrimitiveTypeAccess().getTypeDoubleKeyword_0_7());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMCPrimitiveTypeRule());
					}
					setWithLastConsumed($current, "type", lv_type_0_8, null);
				}
			)
		)
	)
;

// Entry rule entryRuleMCObjectType
entryRuleMCObjectType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMCObjectTypeRule()); }
	iv_ruleMCObjectType=ruleMCObjectType
	{ $current=$iv_ruleMCObjectType.current; }
	EOF;

// Rule MCObjectType
ruleMCObjectType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_type_0_1='Boolean'
				{
					newLeafNode(lv_type_0_1, grammarAccess.getMCObjectTypeAccess().getTypeBooleanKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMCObjectTypeRule());
					}
					setWithLastConsumed($current, "type", lv_type_0_1, null);
				}
				    |
				lv_type_0_2='Byte'
				{
					newLeafNode(lv_type_0_2, grammarAccess.getMCObjectTypeAccess().getTypeByteKeyword_0_1());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMCObjectTypeRule());
					}
					setWithLastConsumed($current, "type", lv_type_0_2, null);
				}
				    |
				lv_type_0_3='Integer'
				{
					newLeafNode(lv_type_0_3, grammarAccess.getMCObjectTypeAccess().getTypeIntegerKeyword_0_2());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMCObjectTypeRule());
					}
					setWithLastConsumed($current, "type", lv_type_0_3, null);
				}
				    |
				lv_type_0_4='Long'
				{
					newLeafNode(lv_type_0_4, grammarAccess.getMCObjectTypeAccess().getTypeLongKeyword_0_3());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMCObjectTypeRule());
					}
					setWithLastConsumed($current, "type", lv_type_0_4, null);
				}
				    |
				lv_type_0_5='Char'
				{
					newLeafNode(lv_type_0_5, grammarAccess.getMCObjectTypeAccess().getTypeCharKeyword_0_4());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMCObjectTypeRule());
					}
					setWithLastConsumed($current, "type", lv_type_0_5, null);
				}
				    |
				lv_type_0_6='Double'
				{
					newLeafNode(lv_type_0_6, grammarAccess.getMCObjectTypeAccess().getTypeDoubleKeyword_0_5());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMCObjectTypeRule());
					}
					setWithLastConsumed($current, "type", lv_type_0_6, null);
				}
				    |
				lv_type_0_7='String'
				{
					newLeafNode(lv_type_0_7, grammarAccess.getMCObjectTypeAccess().getTypeStringKeyword_0_6());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMCObjectTypeRule());
					}
					setWithLastConsumed($current, "type", lv_type_0_7, null);
				}
			)
		)
	)
;

// Entry rule entryRuleMCCollectionType
entryRuleMCCollectionType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMCCollectionTypeRule()); }
	iv_ruleMCCollectionType=ruleMCCollectionType
	{ $current=$iv_ruleMCCollectionType.current; }
	EOF;

// Rule MCCollectionType
ruleMCCollectionType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					lv_collection_0_1='Set'
					{
						newLeafNode(lv_collection_0_1, grammarAccess.getMCCollectionTypeAccess().getCollectionSetKeyword_0_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getMCCollectionTypeRule());
						}
						setWithLastConsumed($current, "collection", lv_collection_0_1, null);
					}
					    |
					lv_collection_0_2='List'
					{
						newLeafNode(lv_collection_0_2, grammarAccess.getMCCollectionTypeAccess().getCollectionListKeyword_0_0_1());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getMCCollectionTypeRule());
						}
						setWithLastConsumed($current, "collection", lv_collection_0_2, null);
					}
					    |
					lv_collection_0_3='Map'
					{
						newLeafNode(lv_collection_0_3, grammarAccess.getMCCollectionTypeAccess().getCollectionMapKeyword_0_0_2());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getMCCollectionTypeRule());
						}
						setWithLastConsumed($current, "collection", lv_collection_0_3, null);
					}
					    |
					lv_collection_0_4='Optional'
					{
						newLeafNode(lv_collection_0_4, grammarAccess.getMCCollectionTypeAccess().getCollectionOptionalKeyword_0_0_3());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getMCCollectionTypeRule());
						}
						setWithLastConsumed($current, "collection", lv_collection_0_4, null);
					}
				)
			)
		)
		otherlv_1='<'
		{
			newLeafNode(otherlv_1, grammarAccess.getMCCollectionTypeAccess().getLessThanSignKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getMCCollectionTypeAccess().getInnerTypeTypeParserRuleCall_2_0());
				}
				lv_innerType_2_0=ruleType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMCCollectionTypeRule());
					}
					set(
						$current,
						"innerType",
						lv_innerType_2_0,
						"org.palladiosimulator.xtext.montiarcandcore.MontiArcAndCore.Type");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3='>'
		{
			newLeafNode(otherlv_3, grammarAccess.getMCCollectionTypeAccess().getGreaterThanSignKeyword_3());
		}
	)
;

// Entry rule entryRuleMCArrayType
entryRuleMCArrayType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMCArrayTypeRule()); }
	iv_ruleMCArrayType=ruleMCArrayType
	{ $current=$iv_ruleMCArrayType.current; }
	EOF;

// Rule MCArrayType
ruleMCArrayType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getMCArrayTypeAccess().getMCPrimitiveTypeParserRuleCall_0());
		}
		this_MCPrimitiveType_0=ruleMCPrimitiveType
		{
			$current = $this_MCPrimitiveType_0.current;
			afterParserOrEnumRuleCall();
		}
		otherlv_1='['
		{
			newLeafNode(otherlv_1, grammarAccess.getMCArrayTypeAccess().getLeftSquareBracketKeyword_1());
		}
		otherlv_2=']'
		{
			newLeafNode(otherlv_2, grammarAccess.getMCArrayTypeAccess().getRightSquareBracketKeyword_2());
		}
	)
;

// Entry rule entryRuleExpression
entryRuleExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExpressionRule()); }
	iv_ruleExpression=ruleExpression
	{ $current=$iv_ruleExpression.current; }
	EOF;

// Rule Expression
ruleExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getExpressionAccess().getNameExpressionParserRuleCall_0());
		}
		this_NameExpression_0=ruleNameExpression
		{
			$current = $this_NameExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getExpressionAccess().getLiteralExpressionParserRuleCall_1());
		}
		this_LiteralExpression_1=ruleLiteralExpression
		{
			$current = $this_LiteralExpression_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getExpressionAccess().getBinaryExpressionParserRuleCall_2());
		}
		this_BinaryExpression_2=ruleBinaryExpression
		{
			$current = $this_BinaryExpression_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleLiteralExpression
entryRuleLiteralExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLiteralExpressionRule()); }
	iv_ruleLiteralExpression=ruleLiteralExpression
	{ $current=$iv_ruleLiteralExpression.current; }
	EOF;

// Rule LiteralExpression
ruleLiteralExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getLiteralExpressionAccess().getNumberLiteralParserRuleCall_0());
		}
		this_NumberLiteral_0=ruleNumberLiteral
		{
			$current = $this_NumberLiteral_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getLiteralExpressionAccess().getStringLiteralParserRuleCall_1());
		}
		this_StringLiteral_1=ruleStringLiteral
		{
			$current = $this_StringLiteral_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleNumberLiteral
entryRuleNumberLiteral returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNumberLiteralRule()); }
	iv_ruleNumberLiteral=ruleNumberLiteral
	{ $current=$iv_ruleNumberLiteral.current; }
	EOF;

// Rule NumberLiteral
ruleNumberLiteral returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_literal_0_0=RULE_INT
			{
				newLeafNode(lv_literal_0_0, grammarAccess.getNumberLiteralAccess().getLiteralINTTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getNumberLiteralRule());
				}
				setWithLastConsumed(
					$current,
					"literal",
					lv_literal_0_0,
					"org.eclipse.xtext.common.Terminals.INT");
			}
		)
	)
;

// Entry rule entryRuleStringLiteral
entryRuleStringLiteral returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStringLiteralRule()); }
	iv_ruleStringLiteral=ruleStringLiteral
	{ $current=$iv_ruleStringLiteral.current; }
	EOF;

// Rule StringLiteral
ruleStringLiteral returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_literal_0_0=RULE_STRING
			{
				newLeafNode(lv_literal_0_0, grammarAccess.getStringLiteralAccess().getLiteralSTRINGTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getStringLiteralRule());
				}
				setWithLastConsumed(
					$current,
					"literal",
					lv_literal_0_0,
					"org.eclipse.xtext.common.Terminals.STRING");
			}
		)
	)
;

// Entry rule entryRuleNameExpression
entryRuleNameExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNameExpressionRule()); }
	iv_ruleNameExpression=ruleNameExpression
	{ $current=$iv_ruleNameExpression.current; }
	EOF;

// Rule NameExpression
ruleNameExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0=RULE_ID
				{
					newLeafNode(lv_name_0_0, grammarAccess.getNameExpressionAccess().getNameIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getNameExpressionRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_0_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		    |
		(
			(
				lv_qualifiedname_1_0=RULE_MCQUALIFIEDNAME
				{
					newLeafNode(lv_qualifiedname_1_0, grammarAccess.getNameExpressionAccess().getQualifiednameMCQUALIFIEDNAMETerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getNameExpressionRule());
					}
					setWithLastConsumed(
						$current,
						"qualifiedname",
						lv_qualifiedname_1_0,
						"org.palladiosimulator.xtext.montiarcandcore.MontiArcAndCore.MCQUALIFIEDNAME");
				}
			)
		)
	)
;

// Entry rule entryRuleBinaryExpression
entryRuleBinaryExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBinaryExpressionRule()); }
	iv_ruleBinaryExpression=ruleBinaryExpression
	{ $current=$iv_ruleBinaryExpression.current; }
	EOF;

// Rule BinaryExpression
ruleBinaryExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getBinaryExpressionAccess().getLiteral1LiteralExpressionParserRuleCall_0_0_0());
					}
					lv_literal1_0_1=ruleLiteralExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getBinaryExpressionRule());
						}
						set(
							$current,
							"literal1",
							lv_literal1_0_1,
							"org.palladiosimulator.xtext.montiarcandcore.MontiArcAndCore.LiteralExpression");
						afterParserOrEnumRuleCall();
					}
					    |
					{
						newCompositeNode(grammarAccess.getBinaryExpressionAccess().getLiteral1NameExpressionParserRuleCall_0_0_1());
					}
					lv_literal1_0_2=ruleNameExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getBinaryExpressionRule());
						}
						set(
							$current,
							"literal1",
							lv_literal1_0_2,
							"org.palladiosimulator.xtext.montiarcandcore.MontiArcAndCore.NameExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getBinaryExpressionAccess().getOpOperatorEnumRuleCall_1_0());
				}
				lv_op_1_0=ruleOperator
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBinaryExpressionRule());
					}
					set(
						$current,
						"op",
						lv_op_1_0,
						"org.palladiosimulator.xtext.montiarcandcore.MontiArcAndCore.Operator");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getBinaryExpressionAccess().getLiteral2LiteralExpressionParserRuleCall_2_0_0());
					}
					lv_literal2_2_1=ruleLiteralExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getBinaryExpressionRule());
						}
						set(
							$current,
							"literal2",
							lv_literal2_2_1,
							"org.palladiosimulator.xtext.montiarcandcore.MontiArcAndCore.LiteralExpression");
						afterParserOrEnumRuleCall();
					}
					    |
					{
						newCompositeNode(grammarAccess.getBinaryExpressionAccess().getLiteral2NameExpressionParserRuleCall_2_0_1());
					}
					lv_literal2_2_2=ruleNameExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getBinaryExpressionRule());
						}
						set(
							$current,
							"literal2",
							lv_literal2_2_2,
							"org.palladiosimulator.xtext.montiarcandcore.MontiArcAndCore.NameExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
	)
;

// Entry rule entryRuleArguments
entryRuleArguments returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getArgumentsRule()); }
	iv_ruleArguments=ruleArguments
	{ $current=$iv_ruleArguments.current; }
	EOF;

// Rule Arguments
ruleArguments returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='('
		{
			newLeafNode(otherlv_0, grammarAccess.getArgumentsAccess().getLeftParenthesisKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getArgumentsAccess().getArgumentsArgumentParserRuleCall_1_0());
				}
				lv_arguments_1_0=ruleArgument
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getArgumentsRule());
					}
					add(
						$current,
						"arguments",
						lv_arguments_1_0,
						"org.palladiosimulator.xtext.montiarcandcore.MontiArcAndCore.Argument");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_2=','
			{
				newLeafNode(otherlv_2, grammarAccess.getArgumentsAccess().getCommaKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getArgumentsAccess().getArgumentsArgumentParserRuleCall_2_1_0());
					}
					lv_arguments_3_0=ruleArgument
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getArgumentsRule());
						}
						add(
							$current,
							"arguments",
							lv_arguments_3_0,
							"org.palladiosimulator.xtext.montiarcandcore.MontiArcAndCore.Argument");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_4=')'
		{
			newLeafNode(otherlv_4, grammarAccess.getArgumentsAccess().getRightParenthesisKeyword_3());
		}
	)
;

// Entry rule entryRuleArgument
entryRuleArgument returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getArgumentRule()); }
	iv_ruleArgument=ruleArgument
	{ $current=$iv_ruleArgument.current; }
	EOF;

// Rule Argument
ruleArgument returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0=RULE_ID
				{
					newLeafNode(lv_name_0_0, grammarAccess.getArgumentAccess().getNameIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getArgumentRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_0_0 != null,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getArgumentAccess().getExpressionExpressionParserRuleCall_1_0());
				}
				lv_expression_1_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getArgumentRule());
					}
					set(
						$current,
						"expression",
						lv_expression_1_0,
						"org.palladiosimulator.xtext.montiarcandcore.MontiArcAndCore.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleClassDiagramCompilationUnit
entryRuleClassDiagramCompilationUnit returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getClassDiagramCompilationUnitRule()); }
	iv_ruleClassDiagramCompilationUnit=ruleClassDiagramCompilationUnit
	{ $current=$iv_ruleClassDiagramCompilationUnit.current; }
	EOF;

// Rule ClassDiagramCompilationUnit
ruleClassDiagramCompilationUnit returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getClassDiagramCompilationUnitAccess().getPackagePackageParserRuleCall_0_0());
				}
				lv_package_0_0=rulePackage
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getClassDiagramCompilationUnitRule());
					}
					set(
						$current,
						"package",
						lv_package_0_0,
						"org.palladiosimulator.xtext.montiarcandcore.MontiArcAndCore.Package");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getClassDiagramCompilationUnitAccess().getImportStatementsImportStatementsParserRuleCall_1_0());
				}
				lv_importStatements_1_0=ruleImportStatements
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getClassDiagramCompilationUnitRule());
					}
					add(
						$current,
						"importStatements",
						lv_importStatements_1_0,
						"org.palladiosimulator.xtext.montiarcandcore.MontiArcAndCore.ImportStatements");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getClassDiagramCompilationUnitAccess().getDiagramClassDiagramParserRuleCall_2_0());
				}
				lv_diagram_2_0=ruleClassDiagram
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getClassDiagramCompilationUnitRule());
					}
					set(
						$current,
						"diagram",
						lv_diagram_2_0,
						"org.palladiosimulator.xtext.montiarcandcore.MontiArcAndCore.ClassDiagram");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleClassDiagram
entryRuleClassDiagram returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getClassDiagramRule()); }
	iv_ruleClassDiagram=ruleClassDiagram
	{ $current=$iv_ruleClassDiagram.current; }
	EOF;

// Rule ClassDiagram
ruleClassDiagram returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='classdiagram'
		{
			newLeafNode(otherlv_0, grammarAccess.getClassDiagramAccess().getClassdiagramKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getClassDiagramAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getClassDiagramRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getClassDiagramAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getClassDiagramAccess().getCdElementsCDDefinitionParserRuleCall_3_0());
				}
				lv_cdElements_3_0=ruleCDDefinition
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getClassDiagramRule());
					}
					add(
						$current,
						"cdElements",
						lv_cdElements_3_0,
						"org.palladiosimulator.xtext.montiarcandcore.MontiArcAndCore.CDDefinition");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_4='}'
		{
			newLeafNode(otherlv_4, grammarAccess.getClassDiagramAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleCDDefinition
entryRuleCDDefinition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCDDefinitionRule()); }
	iv_ruleCDDefinition=ruleCDDefinition
	{ $current=$iv_ruleCDDefinition.current; }
	EOF;

// Rule CDDefinition
ruleCDDefinition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getCDDefinitionAccess().getCDClassParserRuleCall_0());
		}
		this_CDClass_0=ruleCDClass
		{
			$current = $this_CDClass_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getCDDefinitionAccess().getCDEnumParserRuleCall_1());
		}
		this_CDEnum_1=ruleCDEnum
		{
			$current = $this_CDEnum_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleCDClass
entryRuleCDClass returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCDClassRule()); }
	iv_ruleCDClass=ruleCDClass
	{ $current=$iv_ruleCDClass.current; }
	EOF;

// Rule CDClass
ruleCDClass returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_public_0_0='public'
				{
					newLeafNode(lv_public_0_0, grammarAccess.getCDClassAccess().getPublicPublicKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCDClassRule());
					}
					setWithLastConsumed($current, "public", lv_public_0_0 != null, "public");
				}
			)
		)?
		otherlv_1='class'
		{
			newLeafNode(otherlv_1, grammarAccess.getCDClassAccess().getClassKeyword_1());
		}
		(
			(
				lv_name_2_0=RULE_ID
				{
					newLeafNode(lv_name_2_0, grammarAccess.getCDClassAccess().getNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCDClassRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			otherlv_3='extends'
			{
				newLeafNode(otherlv_3, grammarAccess.getCDClassAccess().getExtendsKeyword_3_0());
			}
			(
				(
					lv_extends_4_0=RULE_ID
					{
						newLeafNode(lv_extends_4_0, grammarAccess.getCDClassAccess().getExtendsIDTerminalRuleCall_3_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getCDClassRule());
						}
						setWithLastConsumed(
							$current,
							"extends",
							lv_extends_4_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
		)?
		(
			otherlv_5='implements'
			{
				newLeafNode(otherlv_5, grammarAccess.getCDClassAccess().getImplementsKeyword_4_0());
			}
			(
				(
					lv_implements_6_0=RULE_ID
					{
						newLeafNode(lv_implements_6_0, grammarAccess.getCDClassAccess().getImplementsIDTerminalRuleCall_4_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getCDClassRule());
						}
						addWithLastConsumed(
							$current,
							"implements",
							lv_implements_6_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
			(
				otherlv_7=','
				{
					newLeafNode(otherlv_7, grammarAccess.getCDClassAccess().getCommaKeyword_4_2_0());
				}
				(
					(
						lv_implements_8_0=RULE_ID
						{
							newLeafNode(lv_implements_8_0, grammarAccess.getCDClassAccess().getImplementsIDTerminalRuleCall_4_2_1_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getCDClassRule());
							}
							addWithLastConsumed(
								$current,
								"implements",
								lv_implements_8_0,
								"org.eclipse.xtext.common.Terminals.ID");
						}
					)
				)
			)*
		)?
		otherlv_9='{'
		{
			newLeafNode(otherlv_9, grammarAccess.getCDClassAccess().getLeftCurlyBracketKeyword_5());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getCDClassAccess().getMembersMemberParserRuleCall_6_0());
				}
				lv_members_10_0=ruleMember
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCDClassRule());
					}
					add(
						$current,
						"members",
						lv_members_10_0,
						"org.palladiosimulator.xtext.montiarcandcore.MontiArcAndCore.Member");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_11='}'
		{
			newLeafNode(otherlv_11, grammarAccess.getCDClassAccess().getRightCurlyBracketKeyword_7());
		}
	)
;

// Entry rule entryRuleCDEnum
entryRuleCDEnum returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCDEnumRule()); }
	iv_ruleCDEnum=ruleCDEnum
	{ $current=$iv_ruleCDEnum.current; }
	EOF;

// Rule CDEnum
ruleCDEnum returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_public_0_0='public'
				{
					newLeafNode(lv_public_0_0, grammarAccess.getCDEnumAccess().getPublicPublicKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCDEnumRule());
					}
					setWithLastConsumed($current, "public", lv_public_0_0 != null, "public");
				}
			)
		)?
		otherlv_1='enum'
		{
			newLeafNode(otherlv_1, grammarAccess.getCDEnumAccess().getEnumKeyword_1());
		}
		(
			(
				lv_name_2_0=RULE_ID
				{
					newLeafNode(lv_name_2_0, grammarAccess.getCDEnumAccess().getNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCDEnumRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_3='{'
		{
			newLeafNode(otherlv_3, grammarAccess.getCDEnumAccess().getLeftCurlyBracketKeyword_3());
		}
		(
			(
				lv_values_4_0=RULE_ID
				{
					newLeafNode(lv_values_4_0, grammarAccess.getCDEnumAccess().getValuesIDTerminalRuleCall_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCDEnumRule());
					}
					addWithLastConsumed(
						$current,
						"values",
						lv_values_4_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_5='}'
		{
			newLeafNode(otherlv_5, grammarAccess.getCDEnumAccess().getRightCurlyBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleMember
entryRuleMember returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMemberRule()); }
	iv_ruleMember=ruleMember
	{ $current=$iv_ruleMember.current; }
	EOF;

// Rule Member
ruleMember returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getMemberAccess().getTypeTypeParserRuleCall_0_0_0());
					}
					lv_type_0_1=ruleType
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMemberRule());
						}
						set(
							$current,
							"type",
							lv_type_0_1,
							"org.palladiosimulator.xtext.montiarcandcore.MontiArcAndCore.Type");
						afterParserOrEnumRuleCall();
					}
					    |
					{
						newCompositeNode(grammarAccess.getMemberAccess().getTypeCDDefinitionParserRuleCall_0_0_1());
					}
					lv_type_0_2=ruleCDDefinition
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMemberRule());
						}
						set(
							$current,
							"type",
							lv_type_0_2,
							"org.palladiosimulator.xtext.montiarcandcore.MontiArcAndCore.CDDefinition");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getMemberAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMemberRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2=';'
		{
			newLeafNode(otherlv_2, grammarAccess.getMemberAccess().getSemicolonKeyword_2());
		}
	)
;

// Entry rule entryRuleMACompilationUnit
entryRuleMACompilationUnit returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMACompilationUnitRule()); }
	iv_ruleMACompilationUnit=ruleMACompilationUnit
	{ $current=$iv_ruleMACompilationUnit.current; }
	EOF;

// Rule MACompilationUnit
ruleMACompilationUnit returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getMACompilationUnitAccess().getPackagePackageParserRuleCall_0_0());
				}
				lv_package_0_0=rulePackage
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMACompilationUnitRule());
					}
					set(
						$current,
						"package",
						lv_package_0_0,
						"org.palladiosimulator.xtext.montiarcandcore.MontiArcAndCore.Package");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getMACompilationUnitAccess().getImportStatementsImportStatementsParserRuleCall_1_0());
				}
				lv_importStatements_1_0=ruleImportStatements
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMACompilationUnitRule());
					}
					add(
						$current,
						"importStatements",
						lv_importStatements_1_0,
						"org.palladiosimulator.xtext.montiarcandcore.MontiArcAndCore.ImportStatements");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getMACompilationUnitAccess().getComponentComponentParserRuleCall_2_0());
				}
				lv_component_2_0=ruleComponent
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMACompilationUnitRule());
					}
					set(
						$current,
						"component",
						lv_component_2_0,
						"org.palladiosimulator.xtext.montiarcandcore.MontiArcAndCore.Component");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleComponent
entryRuleComponent returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getComponentRule()); }
	iv_ruleComponent=ruleComponent
	{ $current=$iv_ruleComponent.current; }
	EOF;

// Rule Component
ruleComponent returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='component'
		{
			newLeafNode(otherlv_0, grammarAccess.getComponentAccess().getComponentKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getComponentAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getComponentRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getComponentAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getComponentAccess().getArcElementsArcElementParserRuleCall_3_0());
				}
				lv_arcElements_3_0=ruleArcElement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getComponentRule());
					}
					add(
						$current,
						"arcElements",
						lv_arcElements_3_0,
						"org.palladiosimulator.xtext.montiarcandcore.MontiArcAndCore.ArcElement");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_4='}'
		{
			newLeafNode(otherlv_4, grammarAccess.getComponentAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleParameters
entryRuleParameters returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getParametersRule()); }
	iv_ruleParameters=ruleParameters
	{ $current=$iv_ruleParameters.current; }
	EOF;

// Rule Parameters
ruleParameters returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getParametersAccess().getParametersParameterParserRuleCall_0_0());
				}
				lv_parameters_0_0=ruleParameter
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getParametersRule());
					}
					add(
						$current,
						"parameters",
						lv_parameters_0_0,
						"org.palladiosimulator.xtext.montiarcandcore.MontiArcAndCore.Parameter");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_1=','
			{
				newLeafNode(otherlv_1, grammarAccess.getParametersAccess().getCommaKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getParametersAccess().getParametersParameterParserRuleCall_1_1_0());
					}
					lv_parameters_2_0=ruleParameter
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getParametersRule());
						}
						add(
							$current,
							"parameters",
							lv_parameters_2_0,
							"org.palladiosimulator.xtext.montiarcandcore.MontiArcAndCore.Parameter");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleParameter
entryRuleParameter returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getParameterRule()); }
	iv_ruleParameter=ruleParameter
	{ $current=$iv_ruleParameter.current; }
	EOF;

// Rule Parameter
ruleParameter returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getParameterAccess().getTypeTypeParserRuleCall_0_0());
				}
				lv_type_0_0=ruleType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getParameterRule());
					}
					set(
						$current,
						"type",
						lv_type_0_0,
						"org.palladiosimulator.xtext.montiarcandcore.MontiArcAndCore.Type");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getParameterAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getParameterRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			otherlv_2='='
			{
				newLeafNode(otherlv_2, grammarAccess.getParameterAccess().getEqualsSignKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getParameterAccess().getExpressionExpressionParserRuleCall_2_1_0());
					}
					lv_expression_3_0=ruleExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getParameterRule());
						}
						set(
							$current,
							"expression",
							lv_expression_3_0 != null,
							"org.palladiosimulator.xtext.montiarcandcore.MontiArcAndCore.Expression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleArcElement
entryRuleArcElement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getArcElementRule()); }
	iv_ruleArcElement=ruleArcElement
	{ $current=$iv_ruleArcElement.current; }
	EOF;

// Rule ArcElement
ruleArcElement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getArcElementAccess().getComponentParserRuleCall_0());
		}
		this_Component_0=ruleComponent
		{
			$current = $this_Component_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getArcElementAccess().getSubComponentParserRuleCall_1());
		}
		this_SubComponent_1=ruleSubComponent
		{
			$current = $this_SubComponent_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getArcElementAccess().getConnectorParserRuleCall_2());
		}
		this_Connector_2=ruleConnector
		{
			$current = $this_Connector_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getArcElementAccess().getPortParserRuleCall_3());
		}
		this_Port_3=rulePort
		{
			$current = $this_Port_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getArcElementAccess().getVariableParserRuleCall_4());
		}
		this_Variable_4=ruleVariable
		{
			$current = $this_Variable_4.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getArcElementAccess().getAutomatonParserRuleCall_5());
		}
		this_Automaton_5=ruleAutomaton
		{
			$current = $this_Automaton_5.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleSubComponent
entryRuleSubComponent returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSubComponentRule()); }
	iv_ruleSubComponent=ruleSubComponent
	{ $current=$iv_ruleSubComponent.current; }
	EOF;

// Rule SubComponent
ruleSubComponent returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='component'
		{
			newLeafNode(otherlv_0, grammarAccess.getSubComponentAccess().getComponentKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSubComponentAccess().getTypeTypeParserRuleCall_1_0());
				}
				lv_type_1_0=ruleType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSubComponentRule());
					}
					set(
						$current,
						"type",
						lv_type_1_0,
						"org.palladiosimulator.xtext.montiarcandcore.MontiArcAndCore.Type");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getSubComponentAccess().getArgumentsArgumentsParserRuleCall_2_0());
				}
				lv_arguments_2_0=ruleArguments
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSubComponentRule());
					}
					set(
						$current,
						"arguments",
						lv_arguments_2_0 != null,
						"org.palladiosimulator.xtext.montiarcandcore.MontiArcAndCore.Arguments");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getSubComponentAccess().getInstancesNamesParserRuleCall_3_0());
				}
				lv_instances_3_0=ruleNames
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSubComponentRule());
					}
					set(
						$current,
						"instances",
						lv_instances_3_0,
						"org.palladiosimulator.xtext.montiarcandcore.MontiArcAndCore.Names");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4=';'
		{
			newLeafNode(otherlv_4, grammarAccess.getSubComponentAccess().getSemicolonKeyword_4());
		}
	)
;

// Entry rule entryRuleConnector
entryRuleConnector returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConnectorRule()); }
	iv_ruleConnector=ruleConnector
	{ $current=$iv_ruleConnector.current; }
	EOF;

// Rule Connector
ruleConnector returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					lv_source_0_1=RULE_ID
					{
						newLeafNode(lv_source_0_1, grammarAccess.getConnectorAccess().getSourceIDTerminalRuleCall_0_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getConnectorRule());
						}
						setWithLastConsumed(
							$current,
							"source",
							lv_source_0_1,
							"org.eclipse.xtext.common.Terminals.ID");
					}
					    |
					lv_source_0_2=RULE_MCQUALIFIEDNAME
					{
						newLeafNode(lv_source_0_2, grammarAccess.getConnectorAccess().getSourceMCQUALIFIEDNAMETerminalRuleCall_0_0_1());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getConnectorRule());
						}
						setWithLastConsumed(
							$current,
							"source",
							lv_source_0_2,
							"org.palladiosimulator.xtext.montiarcandcore.MontiArcAndCore.MCQUALIFIEDNAME");
					}
				)
			)
		)
		otherlv_1='->'
		{
			newLeafNode(otherlv_1, grammarAccess.getConnectorAccess().getHyphenMinusGreaterThanSignKeyword_1());
		}
		(
			(
				(
					lv_target_2_1=RULE_ID
					{
						newLeafNode(lv_target_2_1, grammarAccess.getConnectorAccess().getTargetIDTerminalRuleCall_2_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getConnectorRule());
						}
						setWithLastConsumed(
							$current,
							"target",
							lv_target_2_1,
							"org.eclipse.xtext.common.Terminals.ID");
					}
					    |
					lv_target_2_2=RULE_MCQUALIFIEDNAME
					{
						newLeafNode(lv_target_2_2, grammarAccess.getConnectorAccess().getTargetMCQUALIFIEDNAMETerminalRuleCall_2_0_1());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getConnectorRule());
						}
						setWithLastConsumed(
							$current,
							"target",
							lv_target_2_2,
							"org.palladiosimulator.xtext.montiarcandcore.MontiArcAndCore.MCQUALIFIEDNAME");
					}
				)
			)
		)
		otherlv_3=';'
		{
			newLeafNode(otherlv_3, grammarAccess.getConnectorAccess().getSemicolonKeyword_3());
		}
	)
;

// Entry rule entryRulePort
entryRulePort returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPortRule()); }
	iv_rulePort=rulePort
	{ $current=$iv_rulePort.current; }
	EOF;

// Rule Port
rulePort returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='port'
		{
			newLeafNode(otherlv_0, grammarAccess.getPortAccess().getPortKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getPortAccess().getConditionConditionParserRuleCall_1_0());
				}
				lv_condition_1_0=ruleCondition
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPortRule());
					}
					set(
						$current,
						"condition",
						lv_condition_1_0,
						"org.palladiosimulator.xtext.montiarcandcore.MontiArcAndCore.Condition");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				(
					lv_in_2_0='in'
					{
						newLeafNode(lv_in_2_0, grammarAccess.getPortAccess().getInInKeyword_2_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getPortRule());
						}
						setWithLastConsumed($current, "in", lv_in_2_0 != null, "in");
					}
				)
			)
			    |
			(
				(
					lv_out_3_0='out'
					{
						newLeafNode(lv_out_3_0, grammarAccess.getPortAccess().getOutOutKeyword_2_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getPortRule());
						}
						setWithLastConsumed($current, "out", lv_out_3_0 != null, "out");
					}
				)
			)
		)
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getPortAccess().getTypeTypeParserRuleCall_3_0_0());
					}
					lv_type_4_0=ruleType
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPortRule());
						}
						set(
							$current,
							"type",
							lv_type_4_0,
							"org.palladiosimulator.xtext.montiarcandcore.MontiArcAndCore.Type");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getPortRule());
						}
					}
					otherlv_5=RULE_ID
					{
						newLeafNode(otherlv_5, grammarAccess.getPortAccess().getDataTypeCDDefinitionCrossReference_3_1_0());
					}
				)
			)
		)
		(
			(
				(
					lv_name_6_1=RULE_ID
					{
						newLeafNode(lv_name_6_1, grammarAccess.getPortAccess().getNameIDTerminalRuleCall_4_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getPortRule());
						}
						setWithLastConsumed(
							$current,
							"name",
							lv_name_6_1,
							"org.eclipse.xtext.common.Terminals.ID");
					}
					    |
					lv_name_6_2=RULE_MCQUALIFIEDNAME
					{
						newLeafNode(lv_name_6_2, grammarAccess.getPortAccess().getNameMCQUALIFIEDNAMETerminalRuleCall_4_0_1());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getPortRule());
						}
						setWithLastConsumed(
							$current,
							"name",
							lv_name_6_2,
							"org.palladiosimulator.xtext.montiarcandcore.MontiArcAndCore.MCQUALIFIEDNAME");
					}
				)
			)
		)
		otherlv_7=';'
		{
			newLeafNode(otherlv_7, grammarAccess.getPortAccess().getSemicolonKeyword_5());
		}
	)
;

// Entry rule entryRuleCondition
entryRuleCondition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConditionRule()); }
	iv_ruleCondition=ruleCondition
	{ $current=$iv_ruleCondition.current; }
	EOF;

// Rule Condition
ruleCondition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='<<'
		{
			newLeafNode(otherlv_0, grammarAccess.getConditionAccess().getLessThanSignLessThanSignKeyword_0());
		}
		otherlv_1='condition'
		{
			newLeafNode(otherlv_1, grammarAccess.getConditionAccess().getConditionKeyword_1());
		}
		otherlv_2='='
		{
			newLeafNode(otherlv_2, grammarAccess.getConditionAccess().getEqualsSignKeyword_2());
		}
		(
			(
				lv_condition_3_0=RULE_STRING
				{
					newLeafNode(lv_condition_3_0, grammarAccess.getConditionAccess().getConditionSTRINGTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getConditionRule());
					}
					setWithLastConsumed(
						$current,
						"condition",
						lv_condition_3_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_4='>>'
		{
			newLeafNode(otherlv_4, grammarAccess.getConditionAccess().getGreaterThanSignGreaterThanSignKeyword_4());
		}
	)
;

// Entry rule entryRuleNames
entryRuleNames returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNamesRule()); }
	iv_ruleNames=ruleNames
	{ $current=$iv_ruleNames.current; }
	EOF;

// Rule Names
ruleNames returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					lv_names_0_1=RULE_ID
					{
						newLeafNode(lv_names_0_1, grammarAccess.getNamesAccess().getNamesIDTerminalRuleCall_0_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getNamesRule());
						}
						addWithLastConsumed(
							$current,
							"names",
							lv_names_0_1,
							"org.eclipse.xtext.common.Terminals.ID");
					}
					    |
					lv_names_0_2=RULE_MCQUALIFIEDNAME
					{
						newLeafNode(lv_names_0_2, grammarAccess.getNamesAccess().getNamesMCQUALIFIEDNAMETerminalRuleCall_0_0_1());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getNamesRule());
						}
						addWithLastConsumed(
							$current,
							"names",
							lv_names_0_2,
							"org.palladiosimulator.xtext.montiarcandcore.MontiArcAndCore.MCQUALIFIEDNAME");
					}
				)
			)
		)
		(
			otherlv_1=','
			{
				newLeafNode(otherlv_1, grammarAccess.getNamesAccess().getCommaKeyword_1_0());
			}
			(
				(
					(
						lv_names_2_1=RULE_ID
						{
							newLeafNode(lv_names_2_1, grammarAccess.getNamesAccess().getNamesIDTerminalRuleCall_1_1_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getNamesRule());
							}
							addWithLastConsumed(
								$current,
								"names",
								lv_names_2_1,
								"org.eclipse.xtext.common.Terminals.ID");
						}
						    |
						lv_names_2_2=RULE_MCQUALIFIEDNAME
						{
							newLeafNode(lv_names_2_2, grammarAccess.getNamesAccess().getNamesMCQUALIFIEDNAMETerminalRuleCall_1_1_0_1());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getNamesRule());
							}
							addWithLastConsumed(
								$current,
								"names",
								lv_names_2_2,
								"org.palladiosimulator.xtext.montiarcandcore.MontiArcAndCore.MCQUALIFIEDNAME");
						}
					)
				)
			)
		)*
	)
;

// Entry rule entryRuleVariable
entryRuleVariable returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getVariableRule()); }
	iv_ruleVariable=ruleVariable
	{ $current=$iv_ruleVariable.current; }
	EOF;

// Rule Variable
ruleVariable returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getVariableRule());
					}
				}
				otherlv_0=RULE_ID
				{
					newLeafNode(otherlv_0, grammarAccess.getVariableAccess().getTypeComponentCrossReference_0_0());
				}
			)
		)
		(
			(
				(
					lv_name_1_1=RULE_ID
					{
						newLeafNode(lv_name_1_1, grammarAccess.getVariableAccess().getNameIDTerminalRuleCall_1_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getVariableRule());
						}
						setWithLastConsumed(
							$current,
							"name",
							lv_name_1_1,
							"org.eclipse.xtext.common.Terminals.ID");
					}
					    |
					lv_name_1_2=RULE_MCQUALIFIEDNAME
					{
						newLeafNode(lv_name_1_2, grammarAccess.getVariableAccess().getNameMCQUALIFIEDNAMETerminalRuleCall_1_0_1());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getVariableRule());
						}
						setWithLastConsumed(
							$current,
							"name",
							lv_name_1_2,
							"org.palladiosimulator.xtext.montiarcandcore.MontiArcAndCore.MCQUALIFIEDNAME");
					}
				)
			)
		)
		otherlv_2=';'
		{
			newLeafNode(otherlv_2, grammarAccess.getVariableAccess().getSemicolonKeyword_2());
		}
	)
;

// Entry rule entryRuleAutomaton
entryRuleAutomaton returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAutomatonRule()); }
	iv_ruleAutomaton=ruleAutomaton
	{ $current=$iv_ruleAutomaton.current; }
	EOF;

// Rule Automaton
ruleAutomaton returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getAutomatonAccess().getAutomatonAction_0(),
					$current);
			}
		)
		(
			(
				lv_sync_1_0=RULE_SYNC
				{
					newLeafNode(lv_sync_1_0, grammarAccess.getAutomatonAccess().getSyncSYNCTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAutomatonRule());
					}
					setWithLastConsumed(
						$current,
						"sync",
						lv_sync_1_0 != null,
						"org.palladiosimulator.xtext.montiarcandcore.MontiArcAndCore.SYNC");
				}
			)
		)?
		otherlv_2='automaton'
		{
			newLeafNode(otherlv_2, grammarAccess.getAutomatonAccess().getAutomatonKeyword_2());
		}
		(
			(
				lv_name_3_0=RULE_ID
				{
					newLeafNode(lv_name_3_0, grammarAccess.getAutomatonAccess().getNameIDTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAutomatonRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_3_0 != null,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)?
		otherlv_4='{'
		{
			newLeafNode(otherlv_4, grammarAccess.getAutomatonAccess().getLeftCurlyBracketKeyword_4());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getAutomatonAccess().getStatesStateParserRuleCall_5_0_0());
					}
					lv_states_5_0=ruleState
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAutomatonRule());
						}
						add(
							$current,
							"states",
							lv_states_5_0,
							"org.palladiosimulator.xtext.montiarcandcore.MontiArcAndCore.State");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getAutomatonAccess().getTransitionsTransitionParserRuleCall_5_1_0());
					}
					lv_transitions_6_0=ruleTransition
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAutomatonRule());
						}
						add(
							$current,
							"transitions",
							lv_transitions_6_0,
							"org.palladiosimulator.xtext.montiarcandcore.MontiArcAndCore.Transition");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_7='}'
		{
			newLeafNode(otherlv_7, grammarAccess.getAutomatonAccess().getRightCurlyBracketKeyword_6());
		}
	)
;

// Entry rule entryRuleState
entryRuleState returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStateRule()); }
	iv_ruleState=ruleState
	{ $current=$iv_ruleState.current; }
	EOF;

// Rule State
ruleState returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getStateAccess().getSCStateParserRuleCall_0());
		}
		this_SCState_0=ruleSCState
		{
			$current = $this_SCState_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getStateAccess().getInvStateParserRuleCall_1());
		}
		this_InvState_1=ruleInvState
		{
			$current = $this_InvState_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleSCState
entryRuleSCState returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSCStateRule()); }
	iv_ruleSCState=ruleSCState
	{ $current=$iv_ruleSCState.current; }
	EOF;

// Rule SCState
ruleSCState returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getSCStateAccess().getModifierSCModifierEnumRuleCall_0_0());
				}
				lv_modifier_0_0=ruleSCModifier
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSCStateRule());
					}
					add(
						$current,
						"modifier",
						lv_modifier_0_0,
						"org.palladiosimulator.xtext.montiarcandcore.MontiArcAndCore.SCModifier");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getSCStateAccess().getAnteSCSAnteParserRuleCall_1_0());
				}
				lv_ante_1_0=ruleSCSAnte
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSCStateRule());
					}
					set(
						$current,
						"ante",
						lv_ante_1_0,
						"org.palladiosimulator.xtext.montiarcandcore.MontiArcAndCore.SCSAnte");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		otherlv_2='state'
		{
			newLeafNode(otherlv_2, grammarAccess.getSCStateAccess().getStateKeyword_2());
		}
		(
			(
				lv_name_3_0=RULE_ID
				{
					newLeafNode(lv_name_3_0, grammarAccess.getSCStateAccess().getNameIDTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSCStateRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_3_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_4=';'
		{
			newLeafNode(otherlv_4, grammarAccess.getSCStateAccess().getSemicolonKeyword_4());
		}
	)
;

// Entry rule entryRuleInvState
entryRuleInvState returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getInvStateRule()); }
	iv_ruleInvState=ruleInvState
	{ $current=$iv_ruleInvState.current; }
	EOF;

// Rule InvState
ruleInvState returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getInvStateAccess().getModifierSCModifierEnumRuleCall_0_0());
				}
				lv_modifier_0_0=ruleSCModifier
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getInvStateRule());
					}
					add(
						$current,
						"modifier",
						lv_modifier_0_0,
						"org.palladiosimulator.xtext.montiarcandcore.MontiArcAndCore.SCModifier");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_1='state'
		{
			newLeafNode(otherlv_1, grammarAccess.getInvStateAccess().getStateKeyword_1());
		}
		(
			(
				lv_name_2_0=RULE_ID
				{
					newLeafNode(lv_name_2_0, grammarAccess.getInvStateAccess().getNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getInvStateRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_3='['
		{
			newLeafNode(otherlv_3, grammarAccess.getInvStateAccess().getLeftSquareBracketKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getInvStateAccess().getExpressionExpressionParserRuleCall_4_0());
				}
				lv_expression_4_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getInvStateRule());
					}
					set(
						$current,
						"expression",
						lv_expression_4_0,
						"org.palladiosimulator.xtext.montiarcandcore.MontiArcAndCore.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_5=']'
		{
			newLeafNode(otherlv_5, grammarAccess.getInvStateAccess().getRightSquareBracketKeyword_5());
		}
		otherlv_6=';'
		{
			newLeafNode(otherlv_6, grammarAccess.getInvStateAccess().getSemicolonKeyword_6());
		}
	)
;

// Entry rule entryRuleSCSAnte
entryRuleSCSAnte returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSCSAnteRule()); }
	iv_ruleSCSAnte=ruleSCSAnte
	{ $current=$iv_ruleSCSAnte.current; }
	EOF;

// Rule SCSAnte
ruleSCSAnte returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getSCSAnteAccess().getSCSAnteAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getSCSAnteAccess().getBlockBlockParserRuleCall_1_0());
				}
				lv_block_1_0=ruleBlock
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSCSAnteRule());
					}
					set(
						$current,
						"block",
						lv_block_1_0,
						"org.palladiosimulator.xtext.montiarcandcore.MontiArcAndCore.Block");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleTransition
entryRuleTransition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTransitionRule()); }
	iv_ruleTransition=ruleTransition
	{ $current=$iv_ruleTransition.current; }
	EOF;

// Rule Transition
ruleTransition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTransitionRule());
					}
				}
				otherlv_0=RULE_ID
				{
					newLeafNode(otherlv_0, grammarAccess.getTransitionAccess().getSourceStateCrossReference_0_0());
				}
			)
		)
		(
			otherlv_1='->'
			{
				newLeafNode(otherlv_1, grammarAccess.getTransitionAccess().getHyphenMinusGreaterThanSignKeyword_1_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getTransitionRule());
						}
					}
					otherlv_2=RULE_ID
					{
						newLeafNode(otherlv_2, grammarAccess.getTransitionAccess().getTargetStateCrossReference_1_1_0());
					}
				)
			)
		)?
		(
			otherlv_3='['
			{
				newLeafNode(otherlv_3, grammarAccess.getTransitionAccess().getLeftSquareBracketKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getTransitionAccess().getExpressionExpressionParserRuleCall_2_1_0());
					}
					lv_expression_4_0=ruleExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTransitionRule());
						}
						set(
							$current,
							"expression",
							lv_expression_4_0,
							"org.palladiosimulator.xtext.montiarcandcore.MontiArcAndCore.Expression");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_5=']'
			{
				newLeafNode(otherlv_5, grammarAccess.getTransitionAccess().getRightSquareBracketKeyword_2_2());
			}
		)?
		(
			otherlv_6='/'
			{
				newLeafNode(otherlv_6, grammarAccess.getTransitionAccess().getSolidusKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getTransitionAccess().getReactionBlockParserRuleCall_3_1_0());
					}
					lv_reaction_7_0=ruleBlock
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTransitionRule());
						}
						set(
							$current,
							"reaction",
							lv_reaction_7_0,
							"org.palladiosimulator.xtext.montiarcandcore.MontiArcAndCore.Block");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_8=';'
		{
			newLeafNode(otherlv_8, grammarAccess.getTransitionAccess().getSemicolonKeyword_4());
		}
	)
;

// Entry rule entryRuleBlock
entryRuleBlock returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBlockRule()); }
	iv_ruleBlock=ruleBlock
	{ $current=$iv_ruleBlock.current; }
	EOF;

// Rule Block
ruleBlock returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getBlockAccess().getBlockAction_0(),
					$current);
			}
		)
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getBlockAccess().getLeftCurlyBracketKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getBlockAccess().getBlocksBlockStatementParserRuleCall_2_0());
				}
				lv_blocks_2_0=ruleBlockStatement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBlockRule());
					}
					add(
						$current,
						"blocks",
						lv_blocks_2_0,
						"org.palladiosimulator.xtext.montiarcandcore.MontiArcAndCore.BlockStatement");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_3='}'
		{
			newLeafNode(otherlv_3, grammarAccess.getBlockAccess().getRightCurlyBracketKeyword_3());
		}
	)
;

// Entry rule entryRuleBlockStatement
entryRuleBlockStatement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBlockStatementRule()); }
	iv_ruleBlockStatement=ruleBlockStatement
	{ $current=$iv_ruleBlockStatement.current; }
	EOF;

// Rule BlockStatement
ruleBlockStatement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getBlockStatementAccess().getSimpleInitParserRuleCall_0());
		}
		this_SimpleInit_0=ruleSimpleInit
		{
			$current = $this_SimpleInit_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getBlockStatementAccess().getSimpleExpressionParserRuleCall_1());
		}
		this_SimpleExpression_1=ruleSimpleExpression
		{
			$current = $this_SimpleExpression_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleSimpleExpression
entryRuleSimpleExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSimpleExpressionRule()); }
	iv_ruleSimpleExpression=ruleSimpleExpression
	{ $current=$iv_ruleSimpleExpression.current; }
	EOF;

// Rule SimpleExpression
ruleSimpleExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getSimpleExpressionAccess().getExpressionExpressionParserRuleCall_0_0());
				}
				lv_expression_0_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSimpleExpressionRule());
					}
					set(
						$current,
						"expression",
						lv_expression_0_0,
						"org.palladiosimulator.xtext.montiarcandcore.MontiArcAndCore.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1=';'
		{
			newLeafNode(otherlv_1, grammarAccess.getSimpleExpressionAccess().getSemicolonKeyword_1());
		}
	)
;

// Entry rule entryRuleSimpleInit
entryRuleSimpleInit returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSimpleInitRule()); }
	iv_ruleSimpleInit=ruleSimpleInit
	{ $current=$iv_ruleSimpleInit.current; }
	EOF;

// Rule SimpleInit
ruleSimpleInit returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0=RULE_ID
				{
					newLeafNode(lv_name_0_0, grammarAccess.getSimpleInitAccess().getNameIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSimpleInitRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_0_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_1='='
		{
			newLeafNode(otherlv_1, grammarAccess.getSimpleInitAccess().getEqualsSignKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSimpleInitAccess().getExpressionsExpressionParserRuleCall_2_0());
				}
				lv_expressions_2_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSimpleInitRule());
					}
					add(
						$current,
						"expressions",
						lv_expressions_2_0,
						"org.palladiosimulator.xtext.montiarcandcore.MontiArcAndCore.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3=';'
		{
			newLeafNode(otherlv_3, grammarAccess.getSimpleInitAccess().getSemicolonKeyword_3());
		}
	)
;

// Rule Operator
ruleOperator returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='>'
			{
				$current = grammarAccess.getOperatorAccess().getGTEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getOperatorAccess().getGTEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='<'
			{
				$current = grammarAccess.getOperatorAccess().getLTEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getOperatorAccess().getLTEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='=='
			{
				$current = grammarAccess.getOperatorAccess().getEQEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getOperatorAccess().getEQEnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='&&'
			{
				$current = grammarAccess.getOperatorAccess().getBAEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getOperatorAccess().getBAEnumLiteralDeclaration_3());
			}
		)
		    |
		(
			enumLiteral_4='+'
			{
				$current = grammarAccess.getOperatorAccess().getPLUSEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_4, grammarAccess.getOperatorAccess().getPLUSEnumLiteralDeclaration_4());
			}
		)
		    |
		(
			enumLiteral_5='-'
			{
				$current = grammarAccess.getOperatorAccess().getMINUSEnumLiteralDeclaration_5().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_5, grammarAccess.getOperatorAccess().getMINUSEnumLiteralDeclaration_5());
			}
		)
		    |
		(
			enumLiteral_6='/'
			{
				$current = grammarAccess.getOperatorAccess().getDIVEnumLiteralDeclaration_6().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_6, grammarAccess.getOperatorAccess().getDIVEnumLiteralDeclaration_6());
			}
		)
		    |
		(
			enumLiteral_7='*'
			{
				$current = grammarAccess.getOperatorAccess().getMULTEnumLiteralDeclaration_7().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_7, grammarAccess.getOperatorAccess().getMULTEnumLiteralDeclaration_7());
			}
		)
	)
;

// Rule SCModifier
ruleSCModifier returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='initial'
			{
				$current = grammarAccess.getSCModifierAccess().getINITIALEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getSCModifierAccess().getINITIALEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='final'
			{
				$current = grammarAccess.getSCModifierAccess().getFINALEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getSCModifierAccess().getFINALEnumLiteralDeclaration_1());
			}
		)
	)
;

RULE_MCQUALIFIEDNAME : RULE_ID ('.' RULE_ID)+;

RULE_DOTSTAR : '.*';

RULE_SYNC : '<<sync>>';

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
